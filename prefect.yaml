# Welcome to your prefect.yaml file! You can use this file for storing and managing
# configuration for deploying your flows. We recommend committing this file to source
# control along with your flow code.

# Generic metadata about this project
name: unsplash-photo-trends
prefect-version: "{{ prefect.variables.prefect_version }}"

# build section allows you to manage and build docker images
build:
  - prefect_docker.deployments.steps.build_docker_image:
      id: build-image
      requires: prefect-docker>=0.3.1
      dockerfile: auto
      image_name: "{{ prefect.variables.gcp_default_region }}-docker.pkg.dev/{{ prefect.variables.gcp_project_id }}/prefect-{{ prefect.variables.unsplash_photo_trends_env }}/prefect"
      tag: "{{ prefect.variables.prefect_version }}-python{{ prefect.variables.python_version }}"

# push section allows you to manage if and how this project is uploaded to remote locations
push:
  - prefect_docker.deployments.steps.push_docker_image:
      requires: prefect-docker>=0.3.1
      image_name: "{{ build-image.image_name }}"
      tag: "{{ build-image.tag }}"

# pull section allows you to provide instructions for cloning this project in remote locations
pull:
  - prefect.deployments.steps.utility.run_shell_script:
      id: get-git-branch
      script: git symbolic-ref --short HEAD
      stream_output: true
  - prefect.deployments.steps.set_working_directory:
      id: set-working-directory
      directory: "/opt/prefect/{{ prefect.variables.gcp_project_id }}"
  # - prefect.deployments.steps.git_clone:
  #     id: git-clone
  #     repository: "{{ prefect.variables.github_repo }}"
  #     branch: "{{ get-git-branch.stdout }}"
  - prefect.deployments.steps.pip_install_requirements:
      id: pip-install-requirements
      requirements_file: requirements.txt
      stream_output: true

# @see https://docs.prefect.io/2.13.7/guides/prefect-deploy/?h=prefect.yaml#reusing-configuration-across-deployments
definitions:
  work_pools:
    dev-cloud_run_work_pool: &dev_cloud_run_work_pool
      name: "dev-cloud-run-push-work-pool"
      work_queue_name: null
      job_variables:
        image: "{{ build-image.image }}"
    test-cloud_run_work_pool: &test_cloud_run_work_pool
      name: "test-cloud-run-push-work-pool"
      work_queue_name: null
      job_variables:
        image: "{{ build-image.image }}"
    prod-cloud_run_work_pool: &prod_cloud_run_work_pool
      name: "prod-cloud-run-push-work-pool"
      work_queue_name: null
      job_variables:
        image: "{{ build-image.image }}"

# the deployments section allows you to provide configuration for deploying flows
deployments:
  # Test Environment
  - name: "healthcheck-test"
    entrypoint: src/prefect/healthcheck.py:healthcheck
    work_pool: *test_cloud_run_work_pool
    schedule: null
  - name: "ingest-monthly-platform-stats-gcs-test"
    entrypoint: src/prefect/ingest_monthly_platform_stats_gcs.py:ingest_monthly_platform_stats_gcs
    work_pool: *test_cloud_run_work_pool
    schedule:
      cron: "0 8 * * *"
      timezone: "Europe/Berlin"
  - name: "ingest-topics-gcs-test"
    entrypoint: src/prefect/ingest_topics_gcs.py:ingest_topics_gcs
    work_pool: *test_cloud_run_work_pool
    schedule:
      cron: "0 9 * * *"
      timezone: "Europe/Berlin"
  - name: "ingest-photos-napi-gcs-test"
    entrypoint: src/prefect/ingest_photos_napi_gcs.py:ingest_photos_napi_gcs
    work_pool: *test_cloud_run_work_pool
    schedule:
      cron: "*/10 * * * *" # every N min
      timezone: "Europe/Berlin"
    parameters:
      gcp_credential_block_name: unsplash-photo-trends-deployment-sa
      per_page: 30
      proxy_type: datacenter
  - name: "ingest-photos-expanded-napi-bigquery-test"
    entrypoint: src/prefect/ingest_photos_expanded_napi_bigquery.py:ingest_photos_expanded_napi_bigquery
    work_pool: *test_cloud_run_work_pool
    schedule: null
    parameters:
      gcp_credential_block_name: unsplash-photo-trends-deployment-sa
      proxy_type: datacenter
      batch_size: 30
      total_record_size: 60
  - name: "ingest-photos-gcs-test"
    entrypoint: src/prefect/ingest_photos_gcs.py:ingest_photos_gcs
    work_pool: *test_cloud_run_work_pool
    schedule: null
    parameters:
      gcp_credential_block_name: unsplash-photo-trends-deployment-sa
      proxy_type: datacenter
      batch_size: 20
      total_record_size: 20
  # Production Environment
  - name: "healthcheck-prod"
    entrypoint: src/prefect/healthcheck.py:healthcheck
    work_pool: *prod_cloud_run_work_pool
    schedule: null
  - name: "ingest-monthly-platform-stats-gcs-prod"
    entrypoint: src/prefect/ingest_monthly_platform_stats_gcs.py:ingest_monthly_platform_stats_gcs
    work_pool: *prod_cloud_run_work_pool
    schedule:
      cron: "0 8 * * *"
      timezone: "Europe/Berlin"
  - name: "ingest-topics-gcs-prod"
    entrypoint: src/prefect/ingest_topics_gcs.py:ingest_topics_gcs
    work_pool: *prod_cloud_run_work_pool
    schedule:
      cron: "0 9 * * *"
      timezone: "Europe/Berlin"
  - name: "ingest-photos-napi-gcs-prod"
    entrypoint: src/prefect/ingest_photos_napi_gcs.py:ingest_photos_napi_gcs
    work_pool: *prod_cloud_run_work_pool
    schedule:
      cron: "*/60 * * * *" # every N min
      timezone: "Europe/Berlin"
    parameters:
      gcp_credential_block_name: unsplash-photo-trends-deployment-sa
      per_page: 30
      proxy_type: datacenter
  - name: "ingest-photos-expanded-napi-bigquery-prod"
    entrypoint: src/prefect/ingest_photos_expanded_napi_bigquery.py:ingest_photos_expanded_napi_bigquery
    work_pool: *prod_cloud_run_work_pool
    schedule:
      cron: "*/180 * * * *" # every N min
      timezone: "Europe/Berlin"
    parameters:
      gcp_credential_block_name: unsplash-photo-trends-deployment-sa
      proxy_type: datacenter
      batch_size: 30
      total_record_size: 180
  - name: "ingest-photos-gcs-prod"
    entrypoint: src/prefect/ingest_photos_gcs.py:ingest_photos_gcs
    work_pool: *prod_cloud_run_work_pool
    schedule:
      cron: "*/60 * * * *" # every N min
      timezone: "Europe/Berlin"
    parameters:
      gcp_credential_block_name: unsplash-photo-trends-deployment-sa
      proxy_type: datacenter
      batch_size: 20
      total_record_size: 60
